angular.module("templates", []).run(["$templateCache", function($templateCache) {$templateCache.put("about.html","<h3>About the Website</h3>\r\n<p><a href=\"http://www.croteam.com/talosprinciple/\" target=\"_blank\">The Talos Principle</a>, a philosophical first-person puzzle game made by Croteam, the developers of the Serious Sam series, features a set of library computer terminals scattered around its ruined, virtual world. These computer terminals contain texts from various kinds of communication medium, all retrieved from the outside (or \"real\") world.</p>\r\n<p>According to the game\'s story, these texts are partially corrupted and are displayed incorrectly. These \"corrupted\" parts are in fact hexadecimal representations of some actual philosophical quotes from the real world, our world.</p>\r\n<p>When decoded, these text segments provide some kind of philosophical back story, and therefore increase the immersion factor. However, while it\'s perfectly possible to use some kind of hex-to-string tool to \"decode\" these texts, it\'s a cumbersome effort to do while playing the game. Some people have already bulk-decoded these texts and put them up over the internet, but they\'re difficult to navigate through.</p>\r\n<p>This site is intends to address this issue by introducing an alternative, and hopefully better experience: search by filename. The in-game texts all have a file name, so they can be navigated to by using those names. When in-game, simply launch Steam\'s web browser (or minimize the game and open up your own browser), and type the file name in the search box.</p>\r\n<p>There are three display modes for displaying the text: encoded-first, decoded-first and split view. The encoded-first display mode displays the text as-is, with encoded parts highlighted, which can then be hovered on to view the decoded version. The decoded-first display mode, on the other hand, does the same thing in reverse. Finally, the split-view display mode, as the name suggests, displays both encoded-first and decoded-first modes side-by-side.</p>\r\n<p><strong>P.S.</strong> Since not all hexadecimal strings in the game are well-formed, some of them might have been missed or mishandled by the automated generation tool, sorry in advance.</p>\r\n<h3>Contributing and Feedback</h3>\r\n<p>The website runs on an Express Node JS server as a single-page AngularJS application. The data is stored in Elastic Search and is generated by a custom tool written in Java.</p>\r\n<p>For search-engine optimization purposes, static content (such as this page) are pre-rendered by <a href=\"https://prerender.io\" target=\"_blank\">Prerender.io</a>.</p>\r\n<p>To get more technical info about the project, contribute to it, or to send a feedback or report an issue, please use the following Github repositories:</p>\r\n<ul>\r\n	<li>\r\n		<a href=\"https://github.com/ygunayer/talos-ui\" target=\"_blank\">https://github.com/ygunayer/talos-ui</a> - The Web/UI Application\r\n	</li>\r\n	<li>\r\n		<a href=\"https://github.com/ygunayer/talos-decoder\" target=\"_blank\">https://github.com/ygunayer/talos-decoder</a> - The Data Generation Tool\r\n	</li>\r\n</ul>");
$templateCache.put("home.html","<div class=\"panel panel-default\">\r\n	<div class=\"panel-heading clearfix\">\r\n		<span class=\"panel-title\">Find a File</span>\r\n	</div>\r\n	<div class=\"panel-body\">\r\n		<div ng-search-box selected=\"selected\"></div>		\r\n	</div>\r\n</div>\r\n<div class=\"panel panel-default\" ng-show=\"!!file\">\r\n	<div class=\"panel-heading clearfix\">\r\n		<div class=\"pull-right\">\r\n			<div class=\"btn-group\">\r\n				<button class=\"btn btn-default btn-xs\" ng-model=\"displayMode\" btn-radio=\"\'encoded\'\" title=\"Show Encoded Text\">\r\n					<i class=\"fa fa-eye-slash\"></i>\r\n					Original\r\n				</button>\r\n				<button class=\"btn btn-default btn-xs\" ng-model=\"displayMode\" btn-radio=\"\'decoded\'\" title=\"Show Decoded Text\">\r\n					<i class=\"fa fa-eye\"></i>\r\n					Decoded\r\n				</button>\r\n				<button class=\"btn btn-default btn-xs\" ng-model=\"displayMode\" btn-radio=\"\'split\'\" title=\"Show Both in Split View\">\r\n					<i class=\"fa fa-columns\"></i>\r\n					Both\r\n				</button>\r\n			</div>\r\n		</div>\r\n		<h2 class=\"panel-title\">{{ file.title }}</h2>\r\n	</div>\r\n	<div class=\"panel-body\">\r\n		<div class=\"row flatline\">\r\n			<div ng-hide=\"displayMode == \'decoded\'\" ng-class=\"{ \'col-md-6\': displayMode == \'split\', \'col-md-12\': displayMode == \'encoded\' }\">\r\n				<div class=\"well well-sm\" ng-bind-html=\"file.encoded | unsafe\"></div>\r\n			</div>\r\n			<div ng-hide=\"displayMode == \'encoded\'\" ng-class=\"{ \'col-md-6\': displayMode == \'split\', \'col-md-12\': displayMode == \'decoded\' }\">\r\n				<div class=\"well well-sm\" ng-bind-html=\"file.decoded | unsafe\"></div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n</div>\r\n");
$templateCache.put("search.html","<ui-select ng-model=\"$parent.selected\" theme=\"bootstrap\" title=\"Search for a file name\">\r\n	<ui-select-match placeholder=\"Search for a file name\">{{ $select.selected.title }}</ui-select-match>\r\n	<ui-select-choices repeat=\"file in searchResults\" refresh=\"doSearch($select.search)\" refresh-delay=\".5\">\r\n		<strong>{{ file.title }}</strong>\r\n		<div>{{ file.input | limitTo:140 }}</div>\r\n	</ui-select-choices>\r\n</ui-select>");}]);